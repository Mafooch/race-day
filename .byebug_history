exit
self.class.collection.find(_id: @id).first
self.class.collection.find(_id: @id)
self.class
params
params.slice!(:number, :first_name, :last_name, :gender, :group, :secs)
params.slice(:last_name, :gender, :group, :secs)
params
params.slice!(:number, :first_name, :last_name, :gender, :group, :secs)
self
params
exit
result
exit
!!!!
!!!
!!
exit
Racer.find "56b9415c5343ed354acfffb4"
Racer.collection.find.first
Racer.collection.first
result
exit
Racer.collection.find(_id: BSON::ObjectId('56b93e785343ed34e28a7b13')).first
Racer.collection.find(_id: BSON::ObjectId('56b93e785343ed34e28a7b13')).class
Racer.collection.find(_id: BSON::ObjectId('56b93e785343ed34e28a7b13'))
Racer.collection.find(last_name: "KENNEDY").first
Racer.collection.find(last_name: "KENNEDY")
db_rec
@id
Racer.collection.find(_id: @id)
Racer.collection.find(_id: @id).first
Racer.collection.find(_id: @id).class
Racer.collection.find(_id: @id)
Racer.find(@id)
@racer
@id
db_rec[:_id]
db_rec[:_id}
db_rec.class
self.instance_variables
self.class
self
db_rec
exit
result.inserted_id.to_s
result.inserted_id
result.methods
result[:_id]
result.id
result
exit
self
exit
self
exit
Racer.collection.find(last_name: "Gates").first.class
Racer.collection.find(last_name: "Gates").first
Racer.collection.find(last_name: "Gates")
Racer.collection
Racer.find(last_name: "Gates")
self
exit
result[:_id]
result.first
result
exit
result.result
result.class
result
exit
racer.class
racer = Racer.find id
Racer.find id
id
id =Racer.collection.find.first[:_id]
Racer.collection.find.first[:_id]
Racer.collection.find.first
acc_record.class
acc_record
exit
collection.find(i
collection.find(secs: 146242344).first.class
collection.find(secs: 1464).first.class
collection.find(secs: 1464).first
collection.find(secs: 1464).first.class
collection.find(last_name: "JOHNSON").class
collection.find(last_name: "JOHNSON").first.class
collection.find(last_name: "JOHNSON").first
collection.find(last_name: "JOHNSON")
collection.find.first
collection.find
collection
collection.find(:_id=>id).first
collection.find(:_id=>id).class
collection.find(:_id=>id)
collection.find(_id: id).projection(:first_name => true)
collection.find(_id: id).first
collection.find(_id: id)
id
collection
result
exit
result
